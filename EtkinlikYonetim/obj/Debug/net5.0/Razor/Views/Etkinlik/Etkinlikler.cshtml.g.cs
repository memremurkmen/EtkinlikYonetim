#pragma checksum "C:\Users\emret\source\repos\EtkinlikYonetim\EtkinlikYonetim\Views\Etkinlik\Etkinlikler.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "0ef402d3a947044b6fbcc8b664e6b6aca05a52b4"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Etkinlik_Etkinlikler), @"mvc.1.0.view", @"/Views/Etkinlik/Etkinlikler.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\emret\source\repos\EtkinlikYonetim\EtkinlikYonetim\Views\_ViewImports.cshtml"
using EtkinlikYonetim;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\emret\source\repos\EtkinlikYonetim\EtkinlikYonetim\Views\_ViewImports.cshtml"
using EtkinlikYonetim.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\emret\source\repos\EtkinlikYonetim\EtkinlikYonetim\Views\_ViewImports.cshtml"
using Kendo.Mvc.UI;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0ef402d3a947044b6fbcc8b664e6b6aca05a52b4", @"/Views/Etkinlik/Etkinlikler.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ce1fc9304db5fe5748f4e7250fa5826af8d81118", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_Etkinlik_Etkinlikler : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<IEnumerable<EyEtkinlik>>
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 3 "C:\Users\emret\source\repos\EtkinlikYonetim\EtkinlikYonetim\Views\Etkinlik\Etkinlikler.cshtml"
  
    ViewData["Title"] = "Etkinlikler";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("<div class=\"container-fluid\">\r\n    <p>\r\n        <h1>Etkinlikler</h1>\r\n");
            WriteLiteral("    </p>\r\n\r\n    ");
#nullable restore
#line 13 "C:\Users\emret\source\repos\EtkinlikYonetim\EtkinlikYonetim\Views\Etkinlik\Etkinlikler.cshtml"
Write(Html.Kendo().Grid(Model)
               .Name("Grid")
               .Columns(columns =>
               {
                   columns.Bound(c => c.EtkinlikAdi).Title("Etkinlik Adı");
                   columns.Bound(c => c.MaxKatilimciSayisi).Title("Max Katılımcı Sayısı");
                   columns.Bound(c => c.BaslangicTarihi).Format("{0:dd/MM/yyyy HH:mm:ss}").Title("Başlangıç Tarihi");
                   columns.Bound(c => c.BitisTarihi).Format("{0:dd/MM/yyyy HH:mm:ss}").Title("Bitiş Tarihi");
                   columns.Bound(c => c.updateDate).Format("{0:dd/MM/yyyy HH:mm:ss}").Title("Güncellenme Tarihi");
                   columns.Bound(c => c.deleteDate).Format("{0:dd/MM/yyyy HH:mm:ss}").Title("Silinme Tarihi");
                   columns.Bound(c => c.isDeleted).Title("Silindi").ClientTemplate("<span id='badge_#=EtkinlikId#' class='badgeTemplate'></span>");
                   columns.Command(command => {
                       command.Edit();
                       //command.Destroy();
                       command.Custom("Qr Kod Okut").IconClass("k-icon k-i-qr-code").Click("qrKodOkut");
                       command.Custom("Düzenle Sayfası").IconClass("k-icon k-i-edit").Click("etkinlikDuzenle");
                       command.Custom("Sil").IconClass("k-icon k-i-close").Click("etkinlikSil");
                   }).Width(500); ;
               })
               .ToolBar(toolBar =>
               {
                   toolBar.Create().Text("Etkinlik Ekle");
               })
               .Editable(editable => editable.Mode(GridEditMode.PopUp))
               .Events(events => events.DataBound("onDataBound"))
               .Pageable()
               .Sortable(true)
               .Filterable()
               .ClientDetailTemplateId("template")
               .DataSource(dataSource => dataSource
                   .Ajax()
                   //.Batch(true)
                   .PageSize(10)
                   .Model(model =>
                   {
                       model.Id(p => p.EtkinlikId);
                       model.Field(p => p.EtkinlikAdi);
                       model.Field(p => p.MaxKatilimciSayisi);
                       model.Field(p => p.BaslangicTarihi);
                       model.Field(p => p.BitisTarihi);
                       model.Field(p => p.updateDate).Editable(false).DefaultValue(null);
                       model.Field(p => p.deleteDate).Editable(false).DefaultValue(null);
                       model.Field(p => p.isDeleted).Editable(false).DefaultValue(false);
                   })
                   //.Events(events => events.Error("error_handler"))
                   .Create(update => update.Action("EditingPopup_CreateEtkinlik", "Etkinlik"))
                   .Update(update => update.Action("EditingPopup_UpdateEtkinlik", "Etkinlik"))
                   //.Update(update => update.Action("Editing_UpdateEtkinlik", "Etkinlik"))
                   //.Destroy(update => update.Action("EditingInline_Destroy", "Etkinlik"))
                   .ServerOperation(false)
               )

);

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n</div>\r\n<script id=\"template\" type=\"text/kendo-tmpl\">\r\n    ");
#nullable restore
#line 68 "C:\Users\emret\source\repos\EtkinlikYonetim\EtkinlikYonetim\Views\Etkinlik\Etkinlikler.cshtml"
Write(Html.Kendo().TabStrip()
            .Name("tabStrip_#=EtkinlikId#")
            .SelectedIndex(0)
            .Animation(animation => animation.Open(open => open.Fade(FadeDirection.In)))
            .Items(items =>
            {
                items.Add().Text("Davetliler").Content(item => new global::Microsoft.AspNetCore.Mvc.Razor.HelperResult(async(__razor_template_writer) => {
    PushWriter(__razor_template_writer);
    WriteLiteral("\r\n                    ");
#nullable restore
#line 75 "C:\Users\emret\source\repos\EtkinlikYonetim\EtkinlikYonetim\Views\Etkinlik\Etkinlikler.cshtml"
                Write(Html.Kendo().Grid<EyEtkinlikKullaniciEslesme>()
                            .Name("grid_#=EtkinlikId#")
                            .Columns(columns =>
                            {
                                columns.Bound(o => o.Kullanici.Ad);
                                columns.Bound(o => o.Kullanici.Soyad);
                                columns.Bound(o => o.Kullanici.TcNo);
                                columns.Command(command =>
                                {
                                    command.Custom("Davetli Sil").IconClass("k-icon k-i-close").Click("davetliSil");
                                });
                            })
                            .DataSource(dataSource => dataSource
                                .Ajax()
                                .Batch(true)
                                .PageSize(5)
                                .Read(read => read.Action("HierarchyBinding_Kullanicilar", "Kullanici", new { etkinlikId = "#=EtkinlikId#" }))
                            )
                            .Pageable()
                            .Sortable()
                            .ToClientTemplate()
                     );

#line default
#line hidden
#nullable disable
    WriteLiteral("\r\n                ");
    PopWriter();
}
));
                items.Add().Text("Etkinlik Detay").Content(
                     "<div class='etkinlik-details'>" +
                         "<ul>" +
                             "<li><label><strong>Etkinlik Adı:</strong></label> #= EtkinlikAdi #</li>" +
                             "<li><label><strong>Max Katılımcı Sayısı:</strong></label> #= MaxKatilimciSayisi #</li>" +
                             "<li><label><strong>Başlangıç Tarihi:</strong></label> #= BaslangicTarihi #</li>" +
                             "<li><label><strong>Bitiş Tarihi:</strong></label> #= BitisTarihi #</li>" +
                         "</ul>" +
                     "</div>"
                 );
            }).ToClientTemplate());

#line default
#line hidden
#nullable disable
            WriteLiteral(@"


</script>
<script type=""text/javascript"">
    kendo.culture(""es-ES"");
    function onDataBound(e) {
        //this.expandRow(this.tbody.find(""tr.k-master-row"").first());
        var grid = this;
        grid.table.find(""tr"").each(function () {
            var dataItem = grid.dataItem(this);
            var themeColor = dataItem.isDeleted ? 'error' : 'success';
            var text = dataItem.isDeleted ? 'Silindi' : 'Silinmedi';

            $(this).find('script').each(function () {
                eval($(this).html());
            });

            $(this).find("".badgeTemplate"").kendoBadge({
                themeColor: themeColor,
                text: text,
            });


            kendo.bind($(this), dataItem);
        });
    }
    function error_handler(e) {
        if (e.errors) {
            var message = ""Errors:\n"";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {");
            WriteLiteral(@"
                        message += this + ""\n"";
                    });
                }
            });
            alert(message);
        }
    }
    function qrKodOkut(e) {
        var model = this.dataItem($(e.currentTarget).closest(""tr""));
        alert(model.EtkinlikId);
        window.location.href = """);
#nullable restore
#line 151 "C:\Users\emret\source\repos\EtkinlikYonetim\EtkinlikYonetim\Views\Etkinlik\Etkinlikler.cshtml"
                           Write(Url.Action("QrCodeRead", "Etkinlik"));

#line default
#line hidden
#nullable disable
            WriteLiteral("/\" + model.EtkinlikId;\r\n    }\r\n    function etkinlikDuzenle(e) {\r\n        var model = this.dataItem($(e.currentTarget).closest(\"tr\"));\r\n        window.location.href = \"");
#nullable restore
#line 155 "C:\Users\emret\source\repos\EtkinlikYonetim\EtkinlikYonetim\Views\Etkinlik\Etkinlikler.cshtml"
                           Write(Url.Action("EtkinlikDuzenle", "Etkinlik"));

#line default
#line hidden
#nullable disable
            WriteLiteral("/\" + model.EtkinlikId;\r\n    }\r\n    function etkinlikDetay(e) {\r\n        var model = this.dataItem($(e.currentTarget).closest(\"tr\"));\r\n        window.location.href = \"");
#nullable restore
#line 159 "C:\Users\emret\source\repos\EtkinlikYonetim\EtkinlikYonetim\Views\Etkinlik\Etkinlikler.cshtml"
                           Write(Url.Action("EtkinlikDetay", "Etkinlik"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"/"" + model.EtkinlikId;
    }
    function etkinlikSil(e) {
        var model = this.dataItem($(e.currentTarget).closest(""tr""));
        if (!model.isDeleted) {
            swal({
                title: 'Emin misiniz?',
                text: ""Etkinliği silmek istediğinize emin misiniz?"",
                icon: 'warning',
                buttons: {
                    cancel: {
                        text: ""İptal"",
                        value: false,
                        visible: true,
                        closeModal: true,
                        className: """",
                    },
                    confirm: {
                        text: ""Sil"",
                        value: true,
                        visible: true,
                        className: """",
                        closeModal: true
                    }
                }
            }).then(function (value) {
                if (value) {
                    $.ajax({
                        url: """);
#nullable restore
#line 187 "C:\Users\emret\source\repos\EtkinlikYonetim\EtkinlikYonetim\Views\Etkinlik\Etkinlikler.cshtml"
                         Write(Url.Action("EtkinlikSil", "Etkinlik"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                        type: 'POST',
                        data: { 'id': model.EtkinlikId },
                        success: function (response) {
                            swal({
                                title: 'İşlem Tamam!',
                                text: ""Etkinlik başarıyla silindi."",
                                icon: 'success',
                                buttons: {
                                    confirm: {
                                        text: ""Tamam"",
                                        value: true,
                                        visible: true,
                                        className: """",
                                        closeModal: true
                                    }
                                }
                            }).then(function () {
                                location.reload();
                            })
                        },
                        error: function (resp");
            WriteLiteral(@"onse) {
                        }
                    });
                }
                else {
                    swal(
                        'İptal Edildi!',
                        'Etkinlik silinmedi.',
                        'error'
                    )
                }

            })
        }


    }

    function davetliSil(e){
        var model = this.dataItem($(e.currentTarget).closest(""tr""));
            swal({
                title: 'Emin misiniz?',
                text: ""Davetliyi silmek istediğinize emin misiniz?"",
                icon: 'warning',
                buttons: {
                    cancel: {
                        text: ""İptal"",
                        value: false,
                        visible: true,
                        className: """",
                        closeModal: true,
                    },
                    confirm: {
                        text: ""Sil"",
                        value: true,
                        visib");
            WriteLiteral(@"le: true,
                        className: """",
                        closeModal: true
                    }
                }
            }).then(function (value) {
                if (value) {
                    $.ajax({
                        url: """);
#nullable restore
#line 251 "C:\Users\emret\source\repos\EtkinlikYonetim\EtkinlikYonetim\Views\Etkinlik\Etkinlikler.cshtml"
                         Write(Url.Action("DavetliSil", "Etkinlik"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                        type: 'POST',
                        data: {
                            'kullaniciId': model.Kullanici.KullaniciId,
                            'etkinlikId': model.Etkinlik.EtkinlikId
                        },
                        success: function (response) {
                            swal({
                                title: 'İşlem Tamam!',
                                text: ""Davetli başarıyla silindi."",
                                icon: 'success',
                                buttons: {
                                    confirm: {
                                        text: ""Tamam"",
                                        value: true,
                                        visible: true,
                                        className: """",
                                        closeModal: true
                                    }
                                }
                            }).then(function () {
              ");
            WriteLiteral(@"                  location.reload();
                            })
                        },
                        error: function (response) {
                        }
                    });
                }
                else {
                    swal(
                        'İptal Edildi!',
                        'Davetli silinmedi.',
                        'error'
                    )
                }
            })

    }
</script>");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IEnumerable<EyEtkinlik>> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
